/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package banHang;

import ConnectionProvider.connectionProvider;
import KhachHang.view_khachHang;
import quanlybangiaybg_seven.*;
import KhuyenMai.view_khuyenMai;
import NhanVien.view_nhanVien;
import hoaDon.view_hoaDon;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Stack;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ThongKe.View_ThongKe;
import java.time.LocalDate;
import java.time.LocalDateTime;
import sanPham.view_SanPham;

/**
 *
 * @author MSI
 */
public class View_banHang extends javax.swing.JFrame {

    private banHangService_IMPL service = new banHangService_IMPL();
    private long count, sotrang, trang, counthd, sotranghd, tranghd = 1;
    private String dataContructor, data_idKhachHang;

    public View_banHang(String dataContructor, String data_idKhachHang) {
        initComponents();
        //fillHoaDon();
        //fillSanPham();
        txt_thongTinNv.setText(dataContructor);
        txt_khachHang.setText(data_idKhachHang);
//        txt_GiakhuyenMai.setText(view_khuyenMai.giaTri);
//        txt_LoaiKhuyenMai.setText(view_khuyenMai.loai);
        //loadSTHoaDon("0");
        //showTrangThai();
        loadSTSanPham();
        cbo_trangThai.addItem("chờ thanh toán");
        cbo_trangThai.addItem("đã thanh toán");
        cbo_trangThai.addItem("Tất cả");

        cbo_theLoai.addItem("Tất cả");
        Cbo_chatLieu.addItem("Tất cả");
        Cbo_thuongHieu.addItem("Tất cả");
        Cbo_nhaCungCap.addItem("Tất cả");
        Cbo_mau.addItem("Tất cả");
        for (banHang x : service.getTheLoai()) {
            cbo_theLoai.addItem(x.getTenTheLoai());
        }
        for (banHang x : service.getChatLieu()) {
            Cbo_chatLieu.addItem(x.getTenChatLieu());
        }
        for (banHang x : service.getThuongHieu()) {
            Cbo_thuongHieu.addItem(x.getTenThuongHieu());
        }
        for (banHang x : service.getNhaCungCap()) {
            Cbo_nhaCungCap.addItem(x.getTenNhaCungCap());
        }
        for (banHang x : service.getMau()) {
            Cbo_mau.addItem(x.getTenMau());
        }

    }

//    public View_banHang() {
//        initComponents();
//        //fillHoaDon();
//        //fillSanPham();
//        txt_thongTinNv.setText(dataContructor);
//        //loadSTHoaDon("0");
//        //showTrangThai();
//        loadSTSanPham();
//        cbo_trangThai.addItem("chờ thanh toán");
//        cbo_trangThai.addItem("đã thanh toán");
//        cbo_trangThai.addItem("Tất cả");
//
//        cbo_theLoai.addItem("Tất cả");
//        Cbo_chatLieu.addItem("Tất cả");
//        Cbo_thuongHieu.addItem("Tất cả");
//        Cbo_nhaCungCap.addItem("Tất cả");
//        Cbo_mau.addItem("Tất cả");
//        for (banHang x : service.getTheLoai()) {
//            cbo_theLoai.addItem(x.getTenTheLoai());
//        }
//        for (banHang x : service.getChatLieu()) {
//            Cbo_chatLieu.addItem(x.getTenChatLieu());
//        }
//        for (banHang x : service.getThuongHieu()) {
//            Cbo_thuongHieu.addItem(x.getTenThuongHieu());
//        }
//        for (banHang x : service.getNhaCungCap()) {
//            Cbo_nhaCungCap.addItem(x.getTenNhaCungCap());
//        }
//        for (banHang x : service.getMau()) {
//            Cbo_mau.addItem(x.getTenMau());
//        }
//    }
    void showTrangThai() {
        int trangThai = cbo_trangThai.getSelectedIndex() + 1;
        System.out.println(trangThai);
        String strTrangThai;
        if (trangThai == 0) {
            strTrangThai = "0";
            loadSTHoaDon(strTrangThai);
        } else if (trangThai == 1) {
            strTrangThai = "1";
            loadSTHoaDon(strTrangThai);
        } else {
            strTrangThai = "Tất cả";
            loadSTHoaDon(strTrangThai);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_hoaDon = new javax.swing.JButton();
        btn_sanPham = new javax.swing.JButton();
        btn_khuyenMai = new javax.swing.JButton();
        btn_nhanVien = new javax.swing.JButton();
        btn_banHang = new javax.swing.JButton();
        btn_trangChu = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btn_thongKe = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txt_thongTinNv = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_gioHang = new javax.swing.JTable();
        btn_themGioHang = new javax.swing.JButton();
        btn_xoaGioHang = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_sanPham = new javax.swing.JTable();
        lbl_soTrang = new javax.swing.JLabel();
        btn_pre = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_timKiem = new javax.swing.JButton();
        txt_timKiem = new javax.swing.JTextField();
        cbo_theLoai = new javax.swing.JComboBox<>();
        Cbo_chatLieu = new javax.swing.JComboBox<>();
        Cbo_thuongHieu = new javax.swing.JComboBox<>();
        Cbo_nhaCungCap = new javax.swing.JComboBox<>();
        Cbo_mau = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_hoaDon = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_thanhToan = new javax.swing.JButton();
        txt_id_hoaDon = new javax.swing.JTextField();
        txt_tenNv = new javax.swing.JTextField();
        txt_tongTien = new javax.swing.JTextField();
        txt_khachDua = new javax.swing.JTextField();
        txt_tienThua = new javax.swing.JTextField();
        txt_ngayTao = new com.toedter.calendar.JDateChooser();
        btn_taoMoi = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_GiakhuyenMai = new javax.swing.JTextField();
        btn_GiaKM = new javax.swing.JButton();
        txt_LoaiKhuyenMai = new javax.swing.JTextField();
        btn_xoaGioHang1 = new javax.swing.JButton();
        btn_taoHoaDon = new javax.swing.JButton();
        lbl_hoaDon = new javax.swing.JLabel();
        tbn_nextHD = new javax.swing.JButton();
        btn_prevHD = new javax.swing.JButton();
        cbo_trangThai = new javax.swing.JComboBox<>();
        txt_khachHang = new javax.swing.JLabel();
        btn_khachHang = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(255, 153, 153));

        btn_hoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/List.png"))); // NOI18N
        btn_hoaDon.setText("Hóa đơn");
        btn_hoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hoaDonActionPerformed(evt);
            }
        });

        btn_sanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/shopping_cart.png"))); // NOI18N
        btn_sanPham.setText("Sản Phẩm");
        btn_sanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sanPhamActionPerformed(evt);
            }
        });

        btn_khuyenMai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/speaker.png"))); // NOI18N
        btn_khuyenMai.setText("Khuyến mãi");
        btn_khuyenMai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_khuyenMaiActionPerformed(evt);
            }
        });

        btn_nhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/users_1.png"))); // NOI18N
        btn_nhanVien.setText("Nhân viên");
        btn_nhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nhanVienActionPerformed(evt);
            }
        });

        btn_banHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/business_user.png"))); // NOI18N
        btn_banHang.setText("Bán Hàng");
        btn_banHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_banHangActionPerformed(evt);
            }
        });

        btn_trangChu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Home.png"))); // NOI18N
        btn_trangChu.setText("Trang chủ");
        btn_trangChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_trangChuActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/User.png"))); // NOI18N
        jButton7.setEnabled(false);

        btn_thongKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Statistics.png"))); // NOI18N
        btn_thongKe.setText("Thống kê");
        btn_thongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thongKeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_nhanVien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_khuyenMai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_sanPham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_hoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_banHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_trangChu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_thongKe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_trangChu, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_banHang, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_hoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_sanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_khuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_nhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_thongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setForeground(new java.awt.Color(255, 153, 153));

        txt_thongTinNv.setText("thông tin nhân viên");
        txt_thongTinNv.setToolTipText("");
        txt_thongTinNv.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_thongTinNv, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(225, 225, 225))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txt_thongTinNv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("giỏ Hàng"));
        jPanel3.setForeground(new java.awt.Color(255, 153, 153));

        tbl_gioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id hóa đơn ct", "id hóa đơn", "tên sản phẩm", "số lượng", "đơn giá", "Thể loại", "chất liệu", "thương hiệu", "nhà cung cấp", "màu", "size"
            }
        ));
        tbl_gioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_gioHangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbl_gioHangMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_gioHang);

        btn_themGioHang.setText("Thêm");
        btn_themGioHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themGioHangActionPerformed(evt);
            }
        });

        btn_xoaGioHang.setText("xóa");
        btn_xoaGioHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaGioHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_themGioHang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_xoaGioHang)
                .addGap(99, 99, 99))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_themGioHang)
                    .addComponent(btn_xoaGioHang)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Sản phẩm"));
        jPanel4.setForeground(new java.awt.Color(255, 153, 153));

        tbl_sanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id sản phẩm ct", "tên sản phẩm", "thể loại", "chất liệu", "thương hiệu", "nhà cung cấp", "màu", "giá", "size", "số lượng", "ghi chú"
            }
        ));
        tbl_sanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_sanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_sanPham);

        lbl_soTrang.setText("jLabel7");

        btn_pre.setText("<<");
        btn_pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_preActionPerformed(evt);
            }
        });

        btn_next.setText(">>");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_timKiem.setText("Tìm kiếm");
        btn_timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timKiemActionPerformed(evt);
            }
        });

        cbo_theLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_theLoaiActionPerformed(evt);
            }
        });

        Cbo_chatLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cbo_chatLieuActionPerformed(evt);
            }
        });

        Cbo_thuongHieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cbo_thuongHieuActionPerformed(evt);
            }
        });

        Cbo_nhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cbo_nhaCungCapActionPerformed(evt);
            }
        });

        Cbo_mau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cbo_mauActionPerformed(evt);
            }
        });

        jLabel7.setText("Thể loại");

        jLabel8.setText("Chất liệu");

        jLabel9.setText("Thương hiệu");

        jLabel10.setText("Nhà cung cấp");

        jLabel11.setText("Màu");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(txt_timKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_timKiem)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(cbo_theLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cbo_chatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Cbo_thuongHieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(Cbo_nhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Cbo_mau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(btn_pre)
                        .addGap(27, 27, 27)
                        .addComponent(lbl_soTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_next)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_timKiem)
                            .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(9, 9, 9)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Cbo_mau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Cbo_nhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Cbo_thuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Cbo_chatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbo_theLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_next)
                    .addComponent(lbl_soTrang)
                    .addComponent(btn_pre))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        tbl_hoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id hóa đơn", "họ tên nhân viên", "trạng thái", "ngày Tạo", "Tên khách Hàng"
            }
        ));
        tbl_hoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_hoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_hoaDon);

        jPanel5.setBackground(new java.awt.Color(255, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thanh Toán"));
        jPanel5.setForeground(new java.awt.Color(255, 153, 153));

        jLabel1.setText("id hóa đơn");

        jLabel2.setText("ngày tạo");

        jLabel3.setText("Tổng tiền");

        jLabel4.setText("Tên nhân viên");

        jLabel5.setText("tiền thừa");

        jLabel6.setText("khách đưa");

        btn_thanhToan.setText("Thanh Toán");
        btn_thanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thanhToanActionPerformed(evt);
            }
        });

        txt_id_hoaDon.setEditable(false);

        txt_tenNv.setEditable(false);

        txt_tongTien.setEditable(false);

        txt_ngayTao.setDateFormatString("yyyy-MM-dd");
        txt_ngayTao.setEnabled(false);

        btn_taoMoi.setText("tạo mới");
        btn_taoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_taoMoiActionPerformed(evt);
            }
        });

        jLabel12.setText("Khuyến mãi");

        txt_GiakhuyenMai.setEditable(false);

        btn_GiaKM.setText("Khuyến Mãi");
        btn_GiaKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GiaKMActionPerformed(evt);
            }
        });

        txt_LoaiKhuyenMai.setEditable(false);

        btn_xoaGioHang1.setText("+");
        btn_xoaGioHang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaGioHang1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btn_thanhToan)
                        .addGap(40, 40, 40)
                        .addComponent(btn_taoMoi))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_tienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(23, 23, 23)))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_id_hoaDon)
                                .addComponent(txt_tenNv, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_ngayTao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                    .addComponent(txt_GiakhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_LoaiKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_xoaGioHang1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_GiaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_tongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_khachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_id_hoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ngayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_tenNv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_GiakhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_GiaKM)
                        .addComponent(txt_LoaiKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_xoaGioHang1)))
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_tongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_khachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_tienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_thanhToan)
                    .addComponent(btn_taoMoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_taoHoaDon.setText("Tạo hóa đơn");
        btn_taoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_taoHoaDonActionPerformed(evt);
            }
        });

        lbl_hoaDon.setText("jLabel7");

        tbn_nextHD.setText(">>");
        tbn_nextHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbn_nextHDActionPerformed(evt);
            }
        });

        btn_prevHD.setText("<<");
        btn_prevHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevHDActionPerformed(evt);
            }
        });

        cbo_trangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_trangThaiActionPerformed(evt);
            }
        });

        btn_khachHang.setText("Chọn khách Hàng");
        btn_khachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_khachHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(98, 98, 98)
                                        .addComponent(btn_prevHD)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_hoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tbn_nextHD)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbo_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_taoHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_khachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_khachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 299, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbl_hoaDon)
                                            .addComponent(tbn_nextHD)
                                            .addComponent(btn_prevHD)
                                            .addComponent(cbo_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(btn_taoHoaDon)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_khachHang)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_khachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_hoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hoaDonActionPerformed
        view_hoaDon viewHd = new view_hoaDon(txt_thongTinNv.getText());
        viewHd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_hoaDonActionPerformed

    private void btn_khuyenMaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_khuyenMaiActionPerformed
        view_khuyenMai viewKM = new view_khuyenMai(txt_thongTinNv.getText());
        viewKM.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_khuyenMaiActionPerformed

    private void btn_trangChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_trangChuActionPerformed
        view_backGroud viewBg = new view_backGroud(txt_thongTinNv.getText());
        viewBg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_trangChuActionPerformed

    private void btn_sanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sanPhamActionPerformed
        view_SanPham viewSp = new view_SanPham(txt_thongTinNv.getText());
        viewSp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_sanPhamActionPerformed

    private void btn_taoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_taoHoaDonActionPerformed
        String tenNv = txt_thongTinNv.getText();
        int trangThai = 0;
        String ngayTao = "12/07/2023";
        LocalDate ngay = LocalDate.now();
        System.out.println("ngày " + ngay);
        String tenKhachHang = txt_khachHang.getText();

        if (tenKhachHang.isEmpty()) {
            JOptionPane.showMessageDialog(null, "bạn chưa trọn khách hàng");
        } else {
            banHang bh = new banHang();
            bh.setTenNhanVien(tenNv);
            bh.setTrangThai(trangThai);
            bh.setNgayTao(String.valueOf(ngay));
            bh.setId_khachHang(Integer.valueOf(tenKhachHang));
            service.taoHoaDon(bh);
            //fillHoaDon();
            loadSTHoaDon("0");
        }


    }//GEN-LAST:event_btn_taoHoaDonActionPerformed

    private void tbl_hoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_hoaDonMouseClicked
        int index = tbl_hoaDon.getSelectedRow();
        String id_hoaDon = tbl_hoaDon.getValueAt(index, 0).toString();
        String daTT = tbl_hoaDon.getValueAt(index, 2).toString();
        //System.out.println(daTT);
        if (daTT.equals("đã thanh toán")) {
            JOptionPane.showMessageDialog(null, "hóa đơn này đã thanh toán chỉ có thể xem");
        } else {
            txt_id_hoaDon.setText(id_hoaDon);
            try {
                Date ngayTao = new SimpleDateFormat("yyyy-MM-dd").parse(tbl_hoaDon.getValueAt(index, 3).toString());
                txt_ngayTao.setDate(ngayTao);
                String search = tbl_hoaDon.getValueAt(index, 0).toString();
                fillgioHang(search);
                showTongTien();
            } catch (Exception e) {
                e.printStackTrace();
            }
            txt_tenNv.setText(tbl_hoaDon.getValueAt(index, 1).toString());
        }

            }//GEN-LAST:event_tbl_hoaDonMouseClicked

    private void tbl_sanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_sanPhamMouseClicked
        int index = tbl_sanPham.getSelectedRow();
        String id_sanPhamCt = tbl_sanPham.getValueAt(index, 0).toString();
        String id_sanPham = tbl_sanPham.getValueAt(index, 1).toString();
        String soLuong = tbl_sanPham.getValueAt(index, 9).toString();
        String soLuongThem = JOptionPane.showInputDialog("vui lòng nhập số lượng sản phẩm muốn thêm");
        String donGia = tbl_sanPham.getValueAt(index, 7).toString();
        String id_hoaDon = txt_id_hoaDon.getText();
        if (id_hoaDon.isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng chọn hóa đơn cần thêm");
        } else {
            if (soLuongThem.isEmpty()) {
                JOptionPane.showMessageDialog(null, "vui lòng nhập số lượng muốn thêm");
            } else if (Integer.valueOf(soLuongThem) <= -1) {
                JOptionPane.showMessageDialog(null, "số lượng không được âm");
            } else if (Pattern.matches("[a-zA-Z]+", soLuongThem)) {
                JOptionPane.showMessageDialog(null, "Số lượng không phải là chữ");
            } else if (Integer.valueOf(soLuongThem) > Integer.valueOf(soLuong)) {
                JOptionPane.showMessageDialog(null, "số lượng không đủ");
            } else {

                banHang bh = new banHang();
                bh.setId_hoaDon(Integer.valueOf(id_hoaDon));
                bh.setId_sanPhamCt(Integer.valueOf(id_sanPhamCt));
                bh.setTenSanPham(id_sanPham);
                bh.setSoLuongThem(Integer.valueOf(soLuongThem));
                bh.setGiaSp(Double.valueOf(donGia));
                bh.setSoLuong(Integer.parseInt(soLuong));
                service.themSanPham(bh);
                service.suaSoLuong(bh);
                //fillSanPham();
                loadSanPham(1);
                String search = txt_id_hoaDon.getText();
                System.out.println(search);
                fillgioHang(search);
                showTongTien();
            }
        }
    }//GEN-LAST:event_tbl_sanPhamMouseClicked

    private void tbl_gioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_gioHangMouseClicked

    }//GEN-LAST:event_tbl_gioHangMouseClicked

    private void btn_thanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thanhToanActionPerformed
        if (txt_tongTien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "tổng tiền không được để trống");
        } else {
            if (txt_khachDua.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "không được để trống tiền khách đưa");
            } else if (Integer.valueOf(txt_khachDua.getText()) <= -1) {
                JOptionPane.showMessageDialog(null, "tiền khách đưa không được âm");
            } else if (txt_khachDua.getText().matches("[a-zA-Z]+")) {
                JOptionPane.showMessageDialog(null, "tiền khách đưa không phải là số");
            } else {
                double tongTien = Double.parseDouble(txt_tongTien.getText());
                double tienKhachDua = Double.parseDouble(txt_khachDua.getText());
                if (tienKhachDua < tongTien) {
                    JOptionPane.showMessageDialog(null, "số tiền chưa đủ");
                } else {
                    double traLai = tienKhachDua - tongTien;
                    txt_tienThua.setText(String.valueOf(traLai));
                    int trangThai = 1;
                    String id_hoaDon = tbl_gioHang.getValueAt(0, 1).toString();
                    banHang bh = new banHang();
                    bh.setTrangThai(trangThai);
                    bh.setId_hoaDon(Integer.valueOf(id_hoaDon));
                    service.thanhToan(bh);
                    DefaultTableModel mol = new DefaultTableModel();
                    mol = (DefaultTableModel) tbl_gioHang.getModel();
                    mol.setRowCount(0);
                    //fillHoaDon();
                    cbo_trangThai.setSelectedItem("đã thanh toán");
                    loadSTHoaDon("Tất cả");
                    //loadHoaDon(1);
                    txt_id_hoaDon.setText("");
                    txt_ngayTao.setDate(null);
                    txt_tenNv.setText("");
                    txt_tongTien.setText("");
                    txt_khachDua.setText("");
                    txt_tienThua.setText("");
                    txt_LoaiKhuyenMai.setText("");
                    txt_GiakhuyenMai.setText("");
                }

            }
        }

    }//GEN-LAST:event_btn_thanhToanActionPerformed

    private void btn_taoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_taoMoiActionPerformed
        txt_id_hoaDon.setText("");
        txt_ngayTao.setDate(null);
        txt_tenNv.setText("");
        txt_tongTien.setText("");
        txt_khachDua.setText("");
        txt_tienThua.setText("");
    }//GEN-LAST:event_btn_taoMoiActionPerformed

    private void btn_preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_preActionPerformed
        if (sotrang > 1) {
            sotrang--;
            loadSanPham(sotrang);
            //lbl_soTrang.setText("" + sotrang);
            lbl_soTrang.setText(sotrang + "/" + trang);
        }
    }//GEN-LAST:event_btn_preActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        if (sotrang < trang) {
            sotrang++;
            loadSanPham(sotrang);
            //lbl_soTrang.setText("" + sotrang);
            lbl_soTrang.setText(sotrang + "/" + trang);
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_prevHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevHDActionPerformed
        if (sotranghd > 1) {
            sotranghd--;
            loadHoaDon(sotranghd, "Tất cả");
            //lbl_soTrang.setText("" + sotrang);
            lbl_hoaDon.setText(sotranghd + "/" + tranghd);
        }
    }//GEN-LAST:event_btn_prevHDActionPerformed

    private void tbn_nextHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbn_nextHDActionPerformed
        if (sotranghd < tranghd) {
            sotranghd++;
            loadHoaDon(sotranghd, "Tất cả");
            //lbl_soTrang.setText("" + sotrang);
            lbl_hoaDon.setText(sotranghd + "/" + tranghd);
        }
    }//GEN-LAST:event_tbn_nextHDActionPerformed

    private void btn_timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timKiemActionPerformed
        String search = txt_timKiem.getText();
        if (search.isEmpty()) {
            JOptionPane.showMessageDialog(null, "bạn chưa nhập sản phẩm muốn tìm");
        } else {
            service.getSanPham(search);
            fillSanPham(search);
        }

    }//GEN-LAST:event_btn_timKiemActionPerformed

    private void cbo_trangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_trangThaiActionPerformed
        int trangThai = cbo_trangThai.getSelectedIndex();
        System.out.println(trangThai);
        String strTrangThai;
        if (trangThai == 0) {
            strTrangThai = "0";
            loadSTHoaDon(strTrangThai);
        } else if (trangThai == 1) {
            strTrangThai = "1";
            loadSTHoaDon(strTrangThai);
        } else {
            strTrangThai = "Tất cả";
            loadSTHoaDon(strTrangThai);
        }
    }//GEN-LAST:event_cbo_trangThaiActionPerformed

    private void cbo_theLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_theLoaiActionPerformed
        int theLoai = cbo_theLoai.getSelectedIndex();
        String strTheLoai;
        System.out.println(theLoai);

        if (theLoai == 1) {
            strTheLoai = "1";
            loadCboTheLoai(1, strTheLoai);
        } else if (theLoai == 2) {
            strTheLoai = "2";
            loadCboTheLoai(1, strTheLoai);
        } else if (theLoai == 3) {
            strTheLoai = "3";
            loadCboTheLoai(1, strTheLoai);
        } else if (theLoai == 4) {
            strTheLoai = "4";
            loadCboTheLoai(1, strTheLoai);
        } else if (theLoai == 5) {
            strTheLoai = "5";
            loadCboTheLoai(1, strTheLoai);
        } else {
            strTheLoai = "Tất cả";
            loadCboTheLoai(1, strTheLoai);
        }
    }//GEN-LAST:event_cbo_theLoaiActionPerformed

    private void Cbo_chatLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cbo_chatLieuActionPerformed

        int theLoai = Cbo_chatLieu.getSelectedIndex();
        String strChatLieu;
        System.out.println(theLoai);

        if (theLoai == 1) {
            strChatLieu = "1";
            loadCboChatLieu(1, strChatLieu);
        } else if (theLoai == 2) {
            strChatLieu = "2";
            loadCboChatLieu(1, strChatLieu);
        } else if (theLoai == 3) {
            strChatLieu = "3";
            loadCboChatLieu(1, strChatLieu);
        } else if (theLoai == 4) {
            strChatLieu = "4";
            loadCboChatLieu(1, strChatLieu);
        } else if (theLoai == 5) {
            strChatLieu = "5";
            loadCboChatLieu(1, strChatLieu);
        } else {
            strChatLieu = "Tất cả";
            loadCboChatLieu(1, strChatLieu);
        }
//        cbo_theLoai.setSelectedItem("Tất cả");
//        Cbo_thuongHieu.setSelectedItem("Tất cả");
//        Cbo_nhaCungCap.setSelectedItem("Tất cả");
//        Cbo_mau.setSelectedItem("Tất cả");
    }//GEN-LAST:event_Cbo_chatLieuActionPerformed

    private void Cbo_thuongHieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cbo_thuongHieuActionPerformed
        int theLoai = Cbo_thuongHieu.getSelectedIndex();
        String strThuongHieu;
        System.out.println(theLoai);

        if (theLoai == 1) {
            strThuongHieu = "1";
            loadCboThuongHieu(1, strThuongHieu);
        } else if (theLoai == 2) {
            strThuongHieu = "2";
            loadCboThuongHieu(1, strThuongHieu);
        } else if (theLoai == 3) {
            strThuongHieu = "3";
            loadCboThuongHieu(1, strThuongHieu);
        } else if (theLoai == 4) {
            strThuongHieu = "4";
            loadCboThuongHieu(1, strThuongHieu);
        } else if (theLoai == 5) {
            strThuongHieu = "5";
            loadCboThuongHieu(1, strThuongHieu);;
        } else {
            strThuongHieu = "Tất cả";
            loadCboThuongHieu(1, strThuongHieu);
        }
    }//GEN-LAST:event_Cbo_thuongHieuActionPerformed

    private void Cbo_nhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cbo_nhaCungCapActionPerformed
        int theLoai = Cbo_nhaCungCap.getSelectedIndex();
        String strNhaCungCap;
        System.out.println(theLoai);

        if (theLoai == 1) {
            strNhaCungCap = "1";
            loadCboNcc(1, strNhaCungCap);
        } else if (theLoai == 2) {
            strNhaCungCap = "2";
            loadCboNcc(1, strNhaCungCap);
        } else if (theLoai == 3) {
            strNhaCungCap = "3";
            loadCboNcc(1, strNhaCungCap);
        } else if (theLoai == 4) {
            strNhaCungCap = "4";
            loadCboNcc(1, strNhaCungCap);
        } else if (theLoai == 5) {
            strNhaCungCap = "5";
            loadCboNcc(1, strNhaCungCap);
        } else {
            strNhaCungCap = "Tất cả";
            loadCboNcc(1, strNhaCungCap);
        }
    }//GEN-LAST:event_Cbo_nhaCungCapActionPerformed

    private void Cbo_mauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cbo_mauActionPerformed
        int theLoai = Cbo_mau.getSelectedIndex();
        String strMau;

        System.out.println(theLoai);
        if (theLoai == 1) {
            strMau = "1";
            loadCboMau(1, strMau);
        } else if (theLoai == 2) {
            strMau = "2";
            loadCboMau(1, strMau);
        } else if (theLoai == 3) {
            strMau = "3";
            loadCboMau(1, strMau);
        } else if (theLoai == 4) {
            strMau = "4";
            loadCboMau(1, strMau);
        } else if (theLoai == 5) {
            strMau = "5";
            loadCboMau(1, strMau);
        } else if (theLoai == 6) {
            strMau = "6";
            loadCboMau(1, strMau);
        } else if (theLoai == 7) {
            strMau = "7";
            loadCboMau(1, strMau);
        } else if (theLoai == 8) {
            strMau = "8";
            loadCboMau(1, strMau);
        } else {
            strMau = "Tất cả";
            loadCboMau(1, strMau);
        }
    }//GEN-LAST:event_Cbo_mauActionPerformed

    private void btn_khachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_khachHangActionPerformed
        view_khachHang viewKh = new view_khachHang(txt_thongTinNv.getText(), txt_thongTinNv.getText());
        viewKh.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_khachHangActionPerformed

    private void btn_GiaKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GiaKMActionPerformed
        view_khuyenMai viewKM = new view_khuyenMai(txt_thongTinNv.getText());
        //viewKm.setVisible(true);
        txt_GiakhuyenMai.setText(viewKM.giaTri);
        txt_LoaiKhuyenMai.setText(viewKM.loai);
        double tongTien = Double.parseDouble(txt_tongTien.getText());
        double khuyenMai = Double.parseDouble(txt_GiakhuyenMai.getText());
        showTongTien();
        //this.dispose();
    }//GEN-LAST:event_btn_GiaKMActionPerformed

    private void btn_banHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_banHangActionPerformed
        JOptionPane.showMessageDialog(null, "bạn đang ở chức bán hàng");
    }//GEN-LAST:event_btn_banHangActionPerformed

    private void btn_nhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nhanVienActionPerformed
        view_nhanVien viewNv = new view_nhanVien(txt_thongTinNv.getText());
        viewNv.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_nhanVienActionPerformed

    private void btn_thongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thongKeActionPerformed
        View_ThongKe viewTK = new View_ThongKe(txt_thongTinNv.getText());
        viewTK.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_thongKeActionPerformed

    private void tbl_gioHangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_gioHangMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_gioHangMouseEntered

    private void btn_themGioHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themGioHangActionPerformed

        int index = tbl_gioHang.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(null, "vui lòng chọn sản phẩm cần thêm");
        } else {
            int suaSoLuong = Integer.parseInt(JOptionPane.showInputDialog("nhập số lượng muốn thêm"));
            int id_hoaDonCt = Integer.parseInt(tbl_gioHang.getValueAt(index, 0).toString());
            int soLuong = Integer.parseInt(tbl_gioHang.getValueAt(index, 3).toString());
            banHang bh = new banHang();
            bh.setId_hoaDonCt(id_hoaDonCt);
            bh.setSoLuong(soLuong);
            bh.setSoLuongThem(suaSoLuong);
            bh.setSoLuongGh(soLuong);
            bh.setSoLuongThemGh(suaSoLuong);
            System.out.println("sl" + soLuong);
            System.out.println("sl" + suaSoLuong);
            service.suaSoLuong(bh);
            service.updateGioHang(bh);
            String search = tbl_gioHang.getValueAt(index, 1).toString();
            fillgioHang(search);
            loadSanPham(1);
            showTongTien();
        }
    }//GEN-LAST:event_btn_themGioHangActionPerformed

    private void btn_xoaGioHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaGioHangActionPerformed
        int index = tbl_gioHang.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(null, "vui lòng chọn sản phẩm cần xóa");
        } else {
            int id_hoaDonCt = Integer.parseInt(tbl_gioHang.getValueAt(index, 0).toString());
            int soLuong = Integer.parseInt(tbl_gioHang.getValueAt(index, 3).toString());
            banHang bh = new banHang();
            bh.setId_hoaDonCt(id_hoaDonCt);
            bh.setSoLuongThem(soLuong);
            service.themSoLuong(bh);
            service.xoaGioHang(bh);
            String search = tbl_gioHang.getValueAt(index, 1).toString();
            fillgioHang(search);
            loadSanPham(1);
            showTongTien();
        }
    }//GEN-LAST:event_btn_xoaGioHangActionPerformed

    private void btn_xoaGioHang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaGioHang1ActionPerformed
        view_khuyenMai viewKM = new view_khuyenMai(txt_thongTinNv.getText());
        viewKM.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_btn_xoaGioHang1ActionPerformed

    void loadSTHoaDon(String strTrangThai) {
        countHoaDon();
        if (counthd % 3 == 0) {
            tranghd = counthd / 3;
        } else {
            tranghd = counthd / 3 + 1;
        }
        loadHoaDon(1, strTrangThai);
        lbl_hoaDon.setText("1/" + tranghd);
    }

    void loadSTSanPham() {
        countSanPham();
        if (count % 3 == 0) {
            trang = count / 3;
        } else {
            trang = count / 3 + 1;
        }
        loadSanPham(1);
        lbl_soTrang.setText("1/" + trang);
    }

    void fillHoaDon() {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_hoaDon.getModel();
        mol.setRowCount(0);
        for (banHang x : service.getHoaDon()) {
            Object[] todata = new Object[]{x.getId_hoaDon(), x.getTenNhanVien(), x.checkTT(), x.getNgayTao()};
            mol.addRow(todata);
        }
    }

    void fillSanPham(String timKiem) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_sanPham.getModel();
        mol.setRowCount(0);
        for (banHang x : service.getSanPham(timKiem)) {
            Object[] dataRow = new Object[]{x.getId_sanPhamCt(), x.getTenSanPham(), x.getTenTheLoai(), x.getTenChatLieu(), x.getTenThuongHieu(), x.getTenNhaCungCap(), x.getTenMau(), x.getGiaSp(), x.getSize(), x.getSoLuong(), x.getGhiChu()};
            mol.addRow(dataRow);
        }
    }

    void fillgioHang(String search) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_gioHang.getModel();
        mol.setRowCount(0);
        for (banHang x : service.getGioHang(search)) {
            Object[] toData = new Object[]{x.getId_hoaDonCt(), x.getId_hoaDon(), x.getTenSanPham(), x.getSoLuong(), x.getGiaSp(), x.getTenTheLoai(), x.getTenChatLieu(), x.getTenThuongHieu(), x.getTenNhaCungCap(), x.getTenMau(), x.getSize()};
            mol.addRow(toData);
        }
    }

    void countSanPham() {
        Connection conn = connectionProvider.getConnection();
        try {
            String sql = "Select count (id_sanPhamCt) from sanPhamCt";
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                count = rs.getLong(1);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void countHoaDon() {
        Connection conn = connectionProvider.getConnection();
        try {
            String sql = "Select count (id_hoaDon) from hoaDon";
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                counthd = rs.getLong(1);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void loadSanPham(long sotrang) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_sanPham.getModel();
        mol.setRowCount(0);
        mol.getDataVector().removeAllElements();
        try {
            String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                    + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                    + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                    + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                    + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                    + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                    + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)";
            Connection conn = connectionProvider.getConnection();
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                Vector v = new Vector();
                int ma = Integer.parseInt(rs.getString(1));
                String tenSp = rs.getString(2);
                String theLoai = rs.getString(3);
                String chatLieu = rs.getString(4);
                String thuongHieu = rs.getString(5);
                String nhaCungCap = rs.getString(6);
                String mau = rs.getString(7);
                double giaSp = Double.parseDouble(rs.getString(8));
                int size = Integer.parseInt(rs.getString(9));
                int soLuong = Integer.parseInt(rs.getString(10));
                String ghiChu = rs.getString(11);

                v.add(ma);
                v.add(tenSp);
                v.add(theLoai);
                v.add(chatLieu);
                v.add(thuongHieu);
                v.add(nhaCungCap);
                v.add(mau);
                v.add(giaSp);
                v.add(size);
                v.add(soLuong);
                v.add(ghiChu);
                mol.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    //cbo thể loại
    void loadCboTheLoai(long sotrang, String strTheLoai) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_sanPham.getModel();
        mol.setRowCount(0);
        mol.getDataVector().removeAllElements();
        ResultSet rs = null;
        try {
            if (strTheLoai.equals("Tất cả")) {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)";
                Connection conn = connectionProvider.getConnection();
                Statement stm = conn.createStatement();
                rs = stm.executeQuery(sql);
            } else {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)"
                        + "and tl.id_theLoai = ? ";
                Connection conn = connectionProvider.getConnection();
                PreparedStatement prm = conn.prepareStatement(sql);
                prm.setString(1, strTheLoai);
                rs = prm.executeQuery();
            }
            while (rs.next()) {
                Vector v = new Vector();
                int ma = Integer.parseInt(rs.getString(1));
                String tenSp = rs.getString(2);
                String theLoai = rs.getString(3);
                String chatLieu = rs.getString(4);
                String thuongHieu = rs.getString(5);
                String nhaCungCap = rs.getString(6);
                String mau = rs.getString(7);
                double giaSp = Double.parseDouble(rs.getString(8));
                int size = Integer.parseInt(rs.getString(9));
                int soLuong = Integer.parseInt(rs.getString(10));
                String ghiChu = rs.getString(11);

                v.add(ma);
                v.add(tenSp);
                v.add(theLoai);
                v.add(chatLieu);
                v.add(thuongHieu);
                v.add(nhaCungCap);
                v.add(mau);
                v.add(giaSp);
                v.add(size);
                v.add(soLuong);
                v.add(ghiChu);
                mol.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    // cbo chất liệu
    void loadCboChatLieu(long sotrang, String strChatLieu) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_sanPham.getModel();
        mol.setRowCount(0);
        mol.getDataVector().removeAllElements();
        ResultSet rs = null;
        try {
            if (strChatLieu.equals("Tất cả")) {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)";
                Connection conn = connectionProvider.getConnection();
                Statement stm = conn.createStatement();
                rs = stm.executeQuery(sql);
            } else {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)"
                        + "and cl.id_chatLieu = ? ";
                Connection conn = connectionProvider.getConnection();
                PreparedStatement prm = conn.prepareStatement(sql);
                prm.setString(1, strChatLieu);
                rs = prm.executeQuery();
            }
            while (rs.next()) {
                Vector v = new Vector();
                int ma = Integer.parseInt(rs.getString(1));
                String tenSp = rs.getString(2);
                String theLoai = rs.getString(3);
                String chatLieu = rs.getString(4);
                String thuongHieu = rs.getString(5);
                String nhaCungCap = rs.getString(6);
                String mau = rs.getString(7);
                double giaSp = Double.parseDouble(rs.getString(8));
                int size = Integer.parseInt(rs.getString(9));
                int soLuong = Integer.parseInt(rs.getString(10));
                String ghiChu = rs.getString(11);

                v.add(ma);
                v.add(tenSp);
                v.add(theLoai);
                v.add(chatLieu);
                v.add(thuongHieu);
                v.add(nhaCungCap);
                v.add(mau);
                v.add(giaSp);
                v.add(size);
                v.add(soLuong);
                v.add(ghiChu);
                mol.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //cbo thương hiệu
    void loadCboThuongHieu(long sotrang, String strThuongHieu) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_sanPham.getModel();
        mol.setRowCount(0);
        mol.getDataVector().removeAllElements();
        ResultSet rs = null;
        try {
            if (strThuongHieu.equals("Tất cả")) {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)";
                Connection conn = connectionProvider.getConnection();
                Statement stm = conn.createStatement();
                rs = stm.executeQuery(sql);
            } else {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)"
                        + "and th.id_thuongHieu = ? ";
                Connection conn = connectionProvider.getConnection();
                PreparedStatement prm = conn.prepareStatement(sql);
                prm.setString(1, strThuongHieu);
                rs = prm.executeQuery();
            }
            while (rs.next()) {
                Vector v = new Vector();
                int ma = Integer.parseInt(rs.getString(1));
                String tenSp = rs.getString(2);
                String theLoai = rs.getString(3);
                String chatLieu = rs.getString(4);
                String thuongHieu = rs.getString(5);
                String nhaCungCap = rs.getString(6);
                String mau = rs.getString(7);
                double giaSp = Double.parseDouble(rs.getString(8));
                int size = Integer.parseInt(rs.getString(9));
                int soLuong = Integer.parseInt(rs.getString(10));
                String ghiChu = rs.getString(11);

                v.add(ma);
                v.add(tenSp);
                v.add(theLoai);
                v.add(chatLieu);
                v.add(thuongHieu);
                v.add(nhaCungCap);
                v.add(mau);
                v.add(giaSp);
                v.add(size);
                v.add(soLuong);
                v.add(ghiChu);
                mol.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //cbo nhà cung cấp
    void loadCboNcc(long sotrang, String StrNhaCungCap) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_sanPham.getModel();
        mol.setRowCount(0);
        mol.getDataVector().removeAllElements();
        ResultSet rs = null;
        try {
            if (StrNhaCungCap.equals("Tất cả")) {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)";
                Connection conn = connectionProvider.getConnection();
                Statement stm = conn.createStatement();
                rs = stm.executeQuery(sql);
            } else {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)"
                        + "and ncc.id_nhaCungCap = ? ";
                Connection conn = connectionProvider.getConnection();
                PreparedStatement prm = conn.prepareStatement(sql);
                prm.setString(1, StrNhaCungCap);
                rs = prm.executeQuery();
            }
            while (rs.next()) {
                Vector v = new Vector();
                int ma = Integer.parseInt(rs.getString(1));
                String tenSp = rs.getString(2);
                String theLoai = rs.getString(3);
                String chatLieu = rs.getString(4);
                String thuongHieu = rs.getString(5);
                String nhaCungCap = rs.getString(6);
                String mau = rs.getString(7);
                double giaSp = Double.parseDouble(rs.getString(8));
                int size = Integer.parseInt(rs.getString(9));
                int soLuong = Integer.parseInt(rs.getString(10));
                String ghiChu = rs.getString(11);

                v.add(ma);
                v.add(tenSp);
                v.add(theLoai);
                v.add(chatLieu);
                v.add(thuongHieu);
                v.add(nhaCungCap);
                v.add(mau);
                v.add(giaSp);
                v.add(size);
                v.add(soLuong);
                v.add(ghiChu);
                mol.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //cbo mau
    void loadCboMau(long sotrang, String strMau) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_sanPham.getModel();
        mol.setRowCount(0);
        mol.getDataVector().removeAllElements();
        ResultSet rs = null;
        try {
            if (strMau.equals("Tất cả")) {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)";
                Connection conn = connectionProvider.getConnection();
                Statement stm = conn.createStatement();
                rs = stm.executeQuery(sql);
            } else {
                String sql = "select top 3 id_sanPhamCt,sp.tenSanPham,tl.tenTheLoai,cl.tenChatLieu,th.tenThuongHieu,ncc.tenNhaCungCap,m.tenMau, gia,size, soLuong, ct.ghiChu \n"
                        + "from sanPhamCt ct join sanPham sp on ct.id_sanPham = sp.id_sanPham \n"
                        + "join theloai tl on ct.id_theLoai = tl.id_theLoai \n"
                        + "join chatLieu cl on ct.id_chatLieu = cl.id_chatLieu\n"
                        + "join thuongHieu th on ct.id_thuongHieu = th.id_thuongHieu\n"
                        + "join nhaCungCap ncc on ct.id_nhaCungCap = ncc.id_nhaCungCap\n"
                        + "join mau m on ct.id_mau = m.id_mau where [id_sanPhamCt]not in (select top   " + (sotrang * 3 - 3) + " [id_sanPhamCt] from sanPhamCt)"
                        + "and m.id_mau = ? ";
                Connection conn = connectionProvider.getConnection();
                PreparedStatement prm = conn.prepareStatement(sql);
                prm.setString(1, strMau);
                rs = prm.executeQuery();
            }
            while (rs.next()) {
                Vector v = new Vector();
                int ma = Integer.parseInt(rs.getString(1));
                String tenSp = rs.getString(2);
                String theLoai = rs.getString(3);
                String chatLieu = rs.getString(4);
                String thuongHieu = rs.getString(5);
                String nhaCungCap = rs.getString(6);
                String mau = rs.getString(7);
                double giaSp = Double.parseDouble(rs.getString(8));
                int size = Integer.parseInt(rs.getString(9));
                int soLuong = Integer.parseInt(rs.getString(10));
                String ghiChu = rs.getString(11);

                v.add(ma);
                v.add(tenSp);
                v.add(theLoai);
                v.add(chatLieu);
                v.add(thuongHieu);
                v.add(nhaCungCap);
                v.add(mau);
                v.add(giaSp);
                v.add(size);
                v.add(soLuong);
                v.add(ghiChu);
                mol.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void loadHoaDon(long sotranghd, String StrTrangThai) {
        DefaultTableModel mol = new DefaultTableModel();
        mol = (DefaultTableModel) tbl_hoaDon.getModel();
        mol.setRowCount(0);
        mol.getDataVector().removeAllElements();
        ResultSet rs = null;
        System.out.println(StrTrangThai);
        try {
            if (StrTrangThai.equals("Tất cả")) {
                String sql = "SELECT TOP 3 hd.id_hoaDon, nv.hoTen, hd.trangThai, hd.ngayTao, kh.hoTen "
                        + "FROM hoaDon hd "
                        + "JOIN nhanVien nv ON hd.id_nhanVien = nv.id_nhanVien "
                        + "JOIN khachHang kh ON hd.id_khachHang = kh.id_khachHang "
                        + "WHERE hd.id_hoaDon NOT IN (SELECT TOP " + (sotranghd * 3 - 3) + " id_hoaDon FROM hoaDon)";
                Connection con = connectionProvider.getConnection();
                Statement stm = con.createStatement();
                rs = stm.executeQuery(sql);
            } else {
                String sql = "SELECT TOP 3 hd.id_hoaDon, nv.hoTen, hd.trangThai, hd.ngayTao, kh.hoTen "
                        + "FROM hoaDon hd "
                        + "JOIN nhanVien nv ON hd.id_nhanVien = nv.id_nhanVien "
                        + "JOIN khachHang kh ON hd.id_khachHang = kh.id_khachHang "
                        + "WHERE hd.id_hoaDon NOT IN (SELECT TOP " + (sotranghd * 3 - 3) + " id_hoaDon FROM hoaDon) "
                        + "AND hd.trangThai = ?";
                Connection con = connectionProvider.getConnection();
                PreparedStatement prm = con.prepareStatement(sql);
                prm.setString(1, StrTrangThai);
                rs = prm.executeQuery();
            }
            while (rs.next()) {
                int id_hoaDon = Integer.parseInt(rs.getString(1));
                String tenNhanvien = rs.getString(2);
                int trangThai = Integer.parseInt(rs.getString(3));
                String checkTT;
                if (trangThai == 1) {
                    checkTT = "đã thanh toán";
                } else {
                    checkTT = "chờ thanh toán";
                }
                String ngaytao = rs.getString(4);
                String tenkhachHang = rs.getString(5);

                Vector vt = new Vector();
                vt.add(id_hoaDon);
                vt.add(tenNhanvien);
                vt.add(checkTT);
                vt.add(ngaytao);
                vt.add(tenkhachHang);
                mol.addRow(vt);
                //System.out.println(mol);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void showTongTien() {
        DefaultTableModel mol = (DefaultTableModel) tbl_gioHang.getModel();
        int rowCount = mol.getRowCount();
        double rowTongTien = 0.0;
        for (int i = 0; i < rowCount; i++) {
            double donGia = Double.parseDouble(tbl_gioHang.getValueAt(i, 3).toString());
            double soLuong = Double.parseDouble(tbl_gioHang.getValueAt(i, 4).toString());
            double tongTien = donGia * soLuong;
            if (txt_GiakhuyenMai.getText().isEmpty() && txt_GiakhuyenMai.getText().isEmpty()) {
                tongTien = (donGia * soLuong);
                rowTongTien += tongTien;
            } else if (txt_LoaiKhuyenMai.getText().equals("%")) {
                double voucher = Double.parseDouble(txt_GiakhuyenMai.getText());
                tongTien = donGia * soLuong - (donGia * soLuong) / voucher;
                rowTongTien += tongTien;
            } else {
                double voucher = Double.parseDouble(txt_GiakhuyenMai.getText());
                tongTien = (donGia * soLuong) - voucher;
                rowTongTien += tongTien;
            }

        }

        txt_tongTien.setText(String.valueOf(rowTongTien));
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_banHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_banHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_banHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_banHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new View_banHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Cbo_chatLieu;
    private javax.swing.JComboBox<String> Cbo_mau;
    private javax.swing.JComboBox<String> Cbo_nhaCungCap;
    private javax.swing.JComboBox<String> Cbo_thuongHieu;
    private javax.swing.JButton btn_GiaKM;
    private javax.swing.JButton btn_banHang;
    private javax.swing.JButton btn_hoaDon;
    private javax.swing.JButton btn_khachHang;
    private javax.swing.JButton btn_khuyenMai;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_nhanVien;
    private javax.swing.JButton btn_pre;
    private javax.swing.JButton btn_prevHD;
    private javax.swing.JButton btn_sanPham;
    private javax.swing.JButton btn_taoHoaDon;
    private javax.swing.JButton btn_taoMoi;
    private javax.swing.JButton btn_thanhToan;
    private javax.swing.JButton btn_themGioHang;
    private javax.swing.JButton btn_thongKe;
    private javax.swing.JButton btn_timKiem;
    private javax.swing.JButton btn_trangChu;
    private javax.swing.JButton btn_xoaGioHang;
    private javax.swing.JButton btn_xoaGioHang1;
    private javax.swing.JComboBox<String> cbo_theLoai;
    private javax.swing.JComboBox<String> cbo_trangThai;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_hoaDon;
    private javax.swing.JLabel lbl_soTrang;
    private javax.swing.JTable tbl_gioHang;
    private javax.swing.JTable tbl_hoaDon;
    private javax.swing.JTable tbl_sanPham;
    private javax.swing.JButton tbn_nextHD;
    private javax.swing.JTextField txt_GiakhuyenMai;
    private javax.swing.JTextField txt_LoaiKhuyenMai;
    private javax.swing.JTextField txt_id_hoaDon;
    private javax.swing.JTextField txt_khachDua;
    private javax.swing.JLabel txt_khachHang;
    private com.toedter.calendar.JDateChooser txt_ngayTao;
    private javax.swing.JTextField txt_tenNv;
    private javax.swing.JTextField txt_thongTinNv;
    private javax.swing.JTextField txt_tienThua;
    private javax.swing.JTextField txt_timKiem;
    private javax.swing.JTextField txt_tongTien;
    // End of variables declaration//GEN-END:variables
}
